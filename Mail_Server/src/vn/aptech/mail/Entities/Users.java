package vn.aptech.mail.Entities;
// Generated Oct 3, 2014 11:46:33 AM by Hibernate Tools 3.6.0


import java.io.Serializable;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;

/**
 * Users generated by hbm2java
 */
@Entity
@Table(name="Users"
    ,schema="dbo"
    ,catalog="MAIL_SERVER"
)
public class Users  implements Serializable {


     private String accountId;
     private Roles roles;
     private String username;
     private String password;
     private String email;
     private String displayName;
     private boolean status;
     private Set<Mail> mailsForAccountReceiveId = new HashSet<Mail>(0);
     private Set<Mail> mailsForAccountSendId = new HashSet<Mail>(0);
     private Profiles profiles;

    public Users() {
    }

	
    public Users(String accountId, Roles roles, String username, String password, String displayName, boolean status) {
        this.accountId = accountId;
        this.roles = roles;
        this.username = username;
        this.password = password;
        this.displayName = displayName;
        this.status = status;
    }
    public Users(String accountId, Roles roles, String username, String password, String email, String displayName, boolean status, Set<Mail> mailsForAccountReceiveId, Set<Mail> mailsForAccountSendId, Profiles profiles) {
       this.accountId = accountId;
       this.roles = roles;
       this.username = username;
       this.password = password;
       this.email = email;
       this.displayName = displayName;
       this.status = status;
       this.mailsForAccountReceiveId = mailsForAccountReceiveId;
       this.mailsForAccountSendId = mailsForAccountSendId;
       this.profiles = profiles;
    }
   
     @Id 

    
    @Column(name="AccountId", unique=true, nullable=false)
    public String getAccountId() {
        return this.accountId;
    }
    
    public void setAccountId(String accountId) {
        this.accountId = accountId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="RoleId", nullable=false)
    public Roles getRoles() {
        return this.roles;
    }
    
    public void setRoles(Roles roles) {
        this.roles = roles;
    }

    
    @Column(name="Username", nullable=false, length=30)
    public String getUsername() {
        return this.username;
    }
    
    public void setUsername(String username) {
        this.username = username;
    }

    
    @Column(name="Password", nullable=false, length=50)
    public String getPassword() {
        return this.password;
    }
    
    public void setPassword(String password) {
        this.password = password;
    }

    
    @Column(name="Email", length=30)
    public String getEmail() {
        return this.email;
    }
    
    public void setEmail(String email) {
        this.email = email;
    }

    
    @Column(name="DisplayName", nullable=false)
    public String getDisplayName() {
        return this.displayName;
    }
    
    public void setDisplayName(String displayName) {
        this.displayName = displayName;
    }

    
    @Column(name="Status", nullable=false)
    public boolean isStatus() {
        return this.status;
    }
    
    public void setStatus(boolean status) {
        this.status = status;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="usersByAccountReceiveId")
    public Set<Mail> getMailsForAccountReceiveId() {
        return this.mailsForAccountReceiveId;
    }
    
    public void setMailsForAccountReceiveId(Set<Mail> mailsForAccountReceiveId) {
        this.mailsForAccountReceiveId = mailsForAccountReceiveId;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="usersByAccountSendId")
    public Set<Mail> getMailsForAccountSendId() {
        return this.mailsForAccountSendId;
    }
    
    public void setMailsForAccountSendId(Set<Mail> mailsForAccountSendId) {
        this.mailsForAccountSendId = mailsForAccountSendId;
    }

@OneToOne(fetch=FetchType.LAZY, mappedBy="users")
    public Profiles getProfiles() {
        return this.profiles;
    }
    
    public void setProfiles(Profiles profiles) {
        this.profiles = profiles;
    }




}


